// /*
// B√†i 24. Nh·∫≠p v√†o 1 chu·ªói t·ª´ b√†n ph√≠m,
// ƒë·∫øm xem c√≥ bao nhi√™u k√Ω t·ª± th∆∞·ªùng
// bao nhi√™u in hoa
// bao nhi√™u s·ªë
// bao nhi√™u space
// */

// // Nh·∫≠p chu·ªói t·ª´ b√†n ph√≠m
// let inputString = prompt("Nh·∫≠p v√†o m·ªôt chu·ªói:");

// // Kh·ªüi t·∫°o c√°c bi·∫øn ƒë·∫øm
// let lowerCaseCount = 0;
// let upperCaseCount = 0;
// let digitCount = 0;
// let spaceCount = 0;

// // Duy·ªát qua t·ª´ng k√Ω t·ª± trong chu·ªói
// for (let i = 0; i < inputString.length; i++) {
//   let char = inputString[i];

//   // Ki·ªÉm tra k√Ω t·ª± th∆∞·ªùng
//   if (char >= "a" && char <= "z") {
//     lowerCaseCount++;
//   }
//   // Ki·ªÉm tra k√Ω t·ª± in hoa
//   else if (char >= "A" && char <= "Z") {
//     upperCaseCount++;
//   }
//   // Ki·ªÉm tra k√Ω t·ª± s·ªë
//   else if (char >= "0" && char <= "9") {
//     digitCount++;
//   }
//   // Ki·ªÉm tra kho·∫£ng tr·∫Øng
//   else if (char === " ") {
//     spaceCount++;
//   }
// }

// // Hi·ªÉn th·ªã k·∫øt qu·∫£
// console.log("S·ªë k√Ω t·ª± th∆∞·ªùng: " + lowerCaseCount);
// console.log("S·ªë k√Ω t·ª± in hoa: " + upperCaseCount);
// console.log("S·ªë k√Ω t·ª± s·ªë: " + digitCount);
// console.log("S·ªë kho·∫£ng tr·∫Øng: " + spaceCount);

// /*
// B√†i t·∫≠p js 25:
// a. Vi·∫øt ch∆∞∆°ng tr√¨nh ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa m·∫≠t kh·∫©u:
// 1. m·∫≠t kh·∫©u h·ª£p l·ªá khi c√≥ √≠t nh·∫•t 6 k√Ω t·ª±
// 2. ch·ª©a √≠t nh·∫•t 1 ch·ªØ c√°i vi·∫øt hoa
// 3. ch·ª©a √≠t nh·∫•t 1 ch·ªØ c√°i vi·∫øt th∆∞·ªùng
// 4. ch·ª©a √≠t nh·∫•t 1 ch·ªØ s·ªë
// b. Cho ng∆∞·ªùi d√πng nh·∫≠p v√†o m·∫≠t kh·∫©u ƒë·ªÉ login / so s√°nh, n·∫øu ƒë√∫ng m·ªü
// c·ª≠a, sai qu√° 5 l·∫ßn kh√≥a ƒëƒÉng nh·∫≠p, tho√°t ch∆∞∆°ng tr√¨nh
// // V√≠ d·ª• m·∫≠t kh·∫©u h·ª£p l·ªá: Abc123
// */

// let correctPassword = "Abc123"; // M·∫≠t kh·∫©u ƒë√∫ng ƒë·ªÉ ƒëƒÉng nh·∫≠p
// let loginAttempts = 0;
// let maxAttempts = 5;

// let checkValidPassword = (inputString1) => {
//   // 1. Ki·ªÉm tra ƒë·ªô d√†i √≠t nh·∫•t 6 k√Ω t·ª±
//   if (inputString1.length < 6) {
//     return false;
//   }

//   // 2. Ki·ªÉm tra c√≥ √≠t nh·∫•t 1 ch·ªØ c√°i vi·∫øt hoa
//   let hasUpperCase = false;
//   for (let i = 0; i < inputString1.length; i++) {
//     if (inputString1[i] >= "A" && inputString1[i] <= "Z") {
//       hasUpperCase = true;
//       break;
//     }
//   }
//   if (!hasUpperCase) return false;

//   // 3. Ki·ªÉm tra c√≥ √≠t nh·∫•t 1 ch·ªØ c√°i vi·∫øt th∆∞·ªùng
//   let hasLowerCase = false;
//   for (let i = 0; i < inputString1.length; i++) {
//     if (inputString1[i] >= "a" && inputString1[i] <= "z") {
//       hasLowerCase = true;
//       break;
//     }
//   }
//   if (!hasLowerCase) return false;

//   // 4. Ki·ªÉm tra c√≥ √≠t nh·∫•t 1 ch·ªØ s·ªë
//   let hasNumber = false;
//   for (let i = 0; i < inputString1.length; i++) {
//     if (inputString1[i] >= "0" && inputString1[i] <= "9") {
//       hasNumber = true;
//       break;
//     }
//   }
//   if (!hasNumber) return false;

//   return true; // M·∫≠t kh·∫©u h·ª£p l·ªá
// };

// // Ph·∫ßn a: Ki·ªÉm tra t√≠nh h·ª£p l·ªá
// let inputString1 = prompt("Nh·∫≠p v√†o m·∫≠t kh·∫©u:");
// if (checkValidPassword(inputString1)) {
//   alert("M·∫≠t kh·∫©u h·ª£p l·ªá!");
// } else {
//   alert(
//     "M·∫≠t kh·∫©u kh√¥ng h·ª£p l·ªá! C·∫ßn √≠t nh·∫•t 6 k√Ω t·ª±, 1 ch·ªØ hoa, 1 ch·ªØ th∆∞·ªùng, 1 ch·ªØ s·ªë."
//   );
// }

// // Ph·∫ßn b: H·ªá th·ªëng ƒëƒÉng nh·∫≠p
// while (loginAttempts < maxAttempts) {
//   let loginPassword = prompt(
//     `Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ ƒëƒÉng nh·∫≠p (c√≤n ${maxAttempts - loginAttempts} l·∫ßn th·ª≠):`
//   );

//   if (loginPassword === correctPassword) {
//     alert("üéâ ƒêƒÉng nh·∫≠p th√†nh c√¥ng! C·ª≠a ƒë√£ m·ªü!");
//     break;
//   } else {
//     loginAttempts++;
//     if (loginAttempts >= maxAttempts) {
//       alert("üîí Sai qu√° 5 l·∫ßn! H·ªá th·ªëng b·ªã kh√≥a. Tho√°t ch∆∞∆°ng tr√¨nh!");
//     } else {
//       alert(`‚ùå Sai m·∫≠t kh·∫©u! C√≤n ${maxAttempts - loginAttempts} l·∫ßn th·ª≠.`);
//     }
//   }
// }

/*
B√†i t·∫≠p js 26:
Vi·∫øt ch∆∞∆°ng tr√¨nh chuy·ªÉn tin nh·∫Øn sang m·∫≠t m√£ theo b·∫£ng:
const a="abcdefghijklmnopqrstuvwxyz"
const b="zxcvbnmasdfghjklqwertyuiop"
*/
function encryptMessage(message) {
  const a = "abcdefghijklmnopqrstuvwxyz";
  const b = "zxcvbnmasdfghjklqwertyuiop";
  let result = "";

  for (let i = 0; i < message.length; i++) {
    let char = message[i].toLowerCase; // chuy·ªÉn ƒë·ªïi th√†nh ch·ªØ th∆∞·ªùng

    // Ki·ªÉm tra k√Ω t·ª± nh·∫≠p c√≥ trong b·∫£ng m√£ kh√¥ng?
    if (a.includes(char)) {
      // Th·ª±c hi·ªán chuy·ªÉn ƒë·ªïi
      // Ki·ªÉm tra v·ªã tr√≠ index k·ªπ t·ª± nh·∫≠p v√†o trong a
      let index = a.indexOf(char);
      // L·∫•y gi√° tr·ªã index, ƒë√≥ng sang chu·ªói b ƒë·ªÉ l·∫•y k√Ω t·ª± t∆∞∆°ng ·ª©ng tr√™n b
      result += b[index];
    }
    // N·∫øu kh√¥ng c√≥ trong b·∫£ng m√£, th√¨ gi·ªØ nguy√™n k√Ω t·ª± v√† d·ªìn v√†o bi·∫øn result
    else {
      result += char; //result = result +char
    }
  }
}

/*
B√†i t·∫≠p js 27:
const a = "t√¥i chƒÉm h·ªçc t√¥i ch·ªãu kh√≥ t√¥i ƒë·∫πp zai";
ƒê·∫øm t·ª´ t√¥i trong string a tr√™n?
*/

/*
B√†i t·∫≠p js 28:
Vi·∫øt ch∆∞∆°ng tr√¨nh t√°ch s·ªë v√† ch·ªØ t·ª´ chu·ªói nh·∫≠p v√†o th√†nh 2 chu·ªói:
* v√≠ d·ª• nh·∫≠p v√†o : abc123 s·∫Ω t√°ch v√† in ra th√†nh 2 chu·ªói abc v√† 123
*/
